git:merge-release-with-develop:
  stage: deploy
  rules:
    - !reference [.rules_onlyrelease, rules]
  cache:
    policy: pull
  retry: 2
  needs: ["bootstrap:npm-ci","bootstrap:composer-install-dev","git:semanticRelease-to-new-tag"]
  before_script:
    - eval $(ssh-agent -s); echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null; mkdir -p ~/.ssh; chmod 700 ~/.ssh
    - echo -e "Host ${CI_SERVER_HOST}\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git config gui.encoding utf-8
    - git remote set-url origin "git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git"
    - git fetch --all
    - export GIT_AUTHOR_NAME="${GITLAB_USER_NAME}"
    - export GIT_AUTHOR_EMAIL="${GITLAB_USER_EMAIL}"
    - export GIT_COMMITTER_NAME="${GITLAB_USER_NAME}"
    - export GIT_COMMITTER_EMAIL="${GITLAB_USER_EMAIL}"
  script:
    - git checkout release
    - git checkout develop
    - git merge --strategy-option=theirs release
    - npm run version:prerelease
    - CURRENTVERSION=$(node -pe "require('./package.json').version")
    - git add .
    - git commit -m "[TASK] Set version of ${CI_PROJECT_NAME} to $(CURRENTVERSION)"
    - git push --all
